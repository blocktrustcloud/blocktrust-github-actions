name: whitelable-ci
description:  Continuous integration main


inputs:
  ENVIRONMENT:
    required: true
    description: 'Which environment: dev, sit, stg, prod'
  CLIENT:
    required: true
    description: 'Which client: default, vrtp ...'
  PROJECT:
    required: true
    description: 'white-label, backend, infra'
  AZURE_RESOURCE_GROUP:
    required: true
    description: 'az rg use'
  DOCKER_CONTAINER_NAME:
    required: true
    description: 'docker container name'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Set env
        run: |
          cp infra/env/.env.${{env.ENVIRONMENT}}.${{env.CLIENT}} .env

      - name: Install package
        run: npm install

      - name: Run test
        run: npm run coverage

      - name: Build
        run: npm run build

#      - name: Connect to ACR
#        uses: azure/docker-login@v1
#        with:
#          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
#          username: ${{ secrets.ACR_USERNAME }}
#          password: ${{ secrets.ACR_PASSWORD }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:${{ github.sha }}
#            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
#          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
#          cache-to: type=inline
