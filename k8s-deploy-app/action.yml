name: k8s-deploy-app
description: Update deployment, service, ingress

inputs:
  ENVIRONMENT:
    required: true
    description: 'Which environment: dev, sit, stg, prod'
  CLIENT:
    required: true
    description: 'Which client: default, vrtp ...'
  PROJECT:
    required: true
    description: 'white-label, backend, infra'
  AZURE_CONTAINER_REGISTRY:
    required: true
    description: 'subdomain acr'
  AZURE_RESOURCE_GROUP:
    required: true
    description: 'az rg use'
  AZURE_CLUSTER_NAME:
    required: true
    description: 'az cluster'
  DOCKER_CONTAINER_NAME:
    required: true
    description: 'docker container name'
  K8S_NAMESPACE:
    required: true
    description: 'k8s namespace'
  REPO_WORKING_DIR:
    required: true
    description: 'Folder with the Dockerfile'
  DNS_HOST:
    required: true
    description: 'k8s DNS suffix'
  AZURE_CREDENTIALS:
    required: true
    description: 'Az credential'
  ADMIN_PORTAL_HOST:
    required: true
    description: 'Admin Portal Host'
  VENDURE_HOST:
    required: true
    description: 'Vendure Host'

runs:
  using: "composite"
  steps:
    # Set the target Azure Kubernetes Service (AKS) cluster.
    - name: Login Azure with SP and set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ inputs.AZURE_CREDENTIALS }}
        cluster-name: ${{ inputs.AZURE_CLUSTER_NAME }}
        resource-group: ${{ inputs.AZURE_RESOURCE_GROUP }}
    # Deploys application based on given manifest file
    - name: Deploys application
      shell: bash
      working-directory: ${{inputs.REPO_WORKING_DIR}}/infra/k8s
      run: |
        ./index.sh ${{ inputs.K8S_NAMESPACE }} ${{ inputs.AZURE_CONTAINER_REGISTRY }} ${{inputs.DOCKER_CONTAINER_NAME}} \
          ${{ inputs.ENVIRONMENT}} ${{ inputs.DNS_HOST }} ${{ inputs.PROJECT }} ${{ inputs.CLIENT }} ${{ inputs.ADMIN_PORTAL_HOST }} ${{ inputs.VENDURE_HOST }}