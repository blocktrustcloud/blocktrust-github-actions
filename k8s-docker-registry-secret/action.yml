name: Push docker registry secret to kubernetes
description: Apply terraform module

inputs:
  ENVIRONMENT:
    required: true
    description: 'Which environment: dev, sit, stg, prod'
  CLIENT:
    required: true
    description: 'Which client: default, vrtp ...'
  PROJECT:
    required: true
    description: 'white-label, backend, infra'
  AZURE_CONTAINER_REGISTRY:
    required: true
    description: 'subdomain acr'
  AZURE_RESOURCE_GROUP:
    required: true
    description: 'az rg use'
  AZURE_CLUSTER_NAME:
    required: true
    description: 'az cluster'
  DOCKER_CONTAINER_NAME:
    required: true
    description: 'docker container name'
  K8S_NAMESPACE:
    required: true
    description: 'k8s namespace'
  AZURE_CREDENTIALS:
    required: true
    description: 'Az credential'
  ACR_USERNAME:
    required: true
    description: 'ACR username'
  ACR_PASSWORD:
    required: true
    description: 'ACR password'

runs:
  using: "composite"
  steps:
    # Set the target Azure Kubernetes Service (AKS) cluster.
    - name: Login Azure with SP and set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ inputs.AZURE_CREDENTIALS }}
        cluster-name: ${{ inputs.AZURE_CLUSTER_NAME }}
        resource-group: ${{ inputs.AZURE_RESOURCE_GROUP }}

    # Create namespace if doesn't exist
    - name: Create namespace
      shell: bash
      run: |
        kubectl create namespace ${{ inputs.K8S_NAMESPACE }} --dry-run -o json | kubectl apply -f -

    # Create imagepullsecret for Azure Container registry (ACR)
    - name: Create image pull secret for ACR
      uses: azure/k8s-actions/k8s-create-secret@master
      with:
        container-registry-url: ${{ inputs.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        container-registry-username: ${{ inputs.ACR_USERNAME }}
        container-registry-password: ${{ inputs.ACR_PASSWORD }}
        namespace: ${{ inputs.K8S_NAMESPACE }}
        secret-name: ${{inputs.CLIENT}}-${{inputs.PROJECT}}-imagepullsecret-secret

